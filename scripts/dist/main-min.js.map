{"version":3,"sources":["main.js"],"names":["ready","fn","document","readyState","addEventListener","attachEvent","readyWrap","button","getElementsByClassName","feedbackContainer","inputs","getElementsByTagName","inspectionForm","logoNav","security","formConnectionManager","navigator","onLine","feedback","createElement","setAttribute","className","innerHTML","appendChild","hasChildNodes","removeChild","firstChild","removeAttribute","serviceWorker","register","then","registration","console","log","scope","catch","e","length","window","location","i","target","chars","size","value","preventDefault","AJAX","XMLHttpRequest","payload","FormData","status","ga","hitType","eventCategory","eventAction","eventLabel","querySelector","reset","open","send"],"mappings":"AAAA,aAKA,SAASA,MAAMC,GACc,YAAxBC,SAASC,WACZF,IACUC,SAASE,iBACnBF,SAASE,iBAAiB,mBAAoBH,GAE9CC,SAASG,YAAY,qBAAsB,WACd,YAAxBH,SAASC,YACZF,MAMJ,SAASK,YACR,IAAIC,EAASL,SAASM,uBAAuB,eAAe,GACxDC,EAAoBP,SAASM,uBAAuB,iBACpDE,EAASR,SAASS,qBAAqB,SACvCC,EAAiBV,SAASM,uBAAuB,mBACjDK,EAAUX,SAASM,uBAAuB,WAC1CM,EAAWZ,SAASM,uBAAuB,iBA4E/C,SAASO,IACR,IAAyB,IAArBC,UAAUC,OAAkB,CAC/B,IAAIC,EAAWhB,SAASiB,cAAc,KAOtC,OALAZ,EAAOa,aAAa,WAAY,QAChCb,EAAOc,UAAY,8BAEnBH,EAASG,UAAY,mBACrBH,EAASI,UAAY,qPACdb,EAAkB,GAAGc,YAAYL,GAEzC,KAAOT,EAAkB,GAAGe,iBAC3Bf,EAAkB,GAAGgB,YAAYhB,EAAkB,GAAGiB,YAKvD,OAFAnB,EAAOoB,gBAAgB,YACvBpB,EAAOc,UAAY,qBACZd,EAAOc,UAUf,GApGI,kBAAmBL,WAEtBA,UAAUY,cAAcC,SAAS,oBAAoBC,KAAK,SAAUC,GACnEC,QAAQC,IAAI,qDAAuDF,EAAaG,SAC9EC,MAAM,SAAUC,GAClBJ,QAAQC,IAAI,sCAAwCG,KAyFlDvB,EAAQwB,QACXxB,EAAQ,GAAGT,iBAAiB,QAAS,WACpCkC,OAAOC,SAAW,0BAIhB7B,EAAO2B,OAAQ,CAElB,IAAK,IAAIG,EAAI,EAAGA,EAAI9B,EAAO2B,OAAQG,GAAK,EACvC9B,EAAO8B,GAAGpC,iBAAiB,QAAS,SAAUgC,GA9FhD,IAA8BK,EAEzBC,EACAC,EAHyBF,EA+FNL,EAAEK,OA7FrBC,EAAQD,EAAOG,MAAMP,OACrBM,EAAOF,EAAOE,KACdD,EAAQC,GAEXF,EAAOE,KAAOF,EAAOG,MAAMP,OACpBI,EAAOE,MACJD,EAAQC,GAAQD,EAPhB,IASVD,EAAOE,KAAOF,EAAOG,MAAMP,OACpBI,EAAOE,OAEfF,EAAOE,KAZI,GAaJF,EAAOE,QAqFd/B,EAAe,GAAGR,iBAAiB,SAAU,SAAUgC,GAEtD,OADAA,EAAES,iBAlFCC,EAAO,IAAIC,eACX7B,EAAWhB,SAASiB,cAAc,KAClC6B,EAAU,IAAIC,SAASrC,EAAe,SAGtCE,EAAS,GAAG8B,OAEf1B,EAASG,UAAY,iBACrBH,EAASI,UAAY,+LACrBb,EAAkB,GAAGc,YAAYL,MAER,IAArBF,UAAUC,SACbC,EAASG,UAAY,mBACrBH,EAASI,UAAY,qPACrBb,EAAkB,GAAGc,YAAYL,IAGlC4B,EAAK1C,iBAAiB,OAAQ,SAAUgC,GACf,MAApBA,EAAEK,OAAOS,QAEZhC,EAASG,UAAY,mBACrBH,EAASI,UAAY,yBACrBb,EAAkB,GAAGc,YAAYL,GAEjCiC,GAAG,OAAQ,CAEVC,QAAS,QACTC,cAAe,OACfC,YAAa,OACbC,WAAY,iBAGbrD,SAASsD,cAAc,oBAAoBC,UAG3CvC,EAASG,UAAY,mBACrBH,EAASI,UAAY,wMACrBb,EAAkB,GAAGc,YAAYL,MAInC4B,EAAKY,KAAK,OAtCD,wCAsCc,GACvBZ,EAAKa,KAAKX,KA3CZ,IACKF,EACA5B,EACA8B,IAoFJV,OAAOlC,iBAAiB,SAAUW,GAElCuB,OAAOlC,iBAAiB,UAAWW,IAIrCf,MAAMM","sourcesContent":["/* eslint-env browser */\n/* global ga */\n\nfunction ready(fn) {\n\tif (document.readyState !== 'loading') {\n\t\tfn()\n\t} else if (document.addEventListener) {\n\t\tdocument.addEventListener('DOMContentLoaded', fn)\n\t} else {\n\t\tdocument.attachEvent('onreadystatechange', () => {\n\t\t\tif (document.readyState !== 'loading') {\n\t\t\t\tfn()\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction readyWrap() {\n\tconst button = document.getElementsByClassName('form_submit')[0]\n\tconst feedbackContainer = document.getElementsByClassName('form_feedback')\n\tconst inputs = document.getElementsByTagName('input')\n\tconst inspectionForm = document.getElementsByClassName('inspection_form')\n\tconst logoNav = document.getElementsByClassName('logoNav')\n\tconst security = document.getElementsByClassName('form_security')\n\n\t// Register the ServiceWorker.\n\tif ('serviceWorker' in navigator) {\n\t\t// The service worker cannot access parent directories (apart from explicity setting scope), so keep it in the root directory.\n\t\tnavigator.serviceWorker\n\t\t\t.register('serviceWorker.js')\n\t\t\t.then((registration) => {\n\t\t\t\tconsole.log(`ServiceWorker registration successful with scope: ${registration.scope}`)\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(`ServiceWorker registration failed: ${e}`)\n\t\t\t})\n\t}\n\n\tfunction inputWidthController(target) {\n\t\tconst base = 25 // base size for all inputs\n\t\tconst chars = target.value.length\n\t\tconst size = target.size\n\t\tif (chars > size) {\n\t\t\t// if the input needs to expand\n\t\t\ttarget.size = target.value.length // expand it\n\t\t\treturn target.size\n\t\t} else if (chars < size && chars > base) {\n\t\t\t// if the input contains less than its width and still has more than 15 characters\n\t\t\ttarget.size = target.value.length // shrink it\n\t\t\treturn target.size\n\t\t} // otherwise\n\t\ttarget.size = base // set to the base width\n\t\treturn target.size\n\t}\n\n\tfunction sendReport() {\n\t\tconst AJAX = new XMLHttpRequest()\n\t\tconst feedback = document.createElement('p')\n\t\tconst payload = new FormData(inspectionForm[0])\n\t\tconst URL = 'https://message.integrisweb.com/sms/'\n\n\t\tif (security[0].value) {\n\t\t\t// if the security input has a value, it's been filled\n\t\t\tfeedback.className = 'feedback_error'\n\t\t\tfeedback.innerHTML =\n\t\t\t\t\"Sorry for the inconvenience, but you somehow triggered our anti-spam protection. Please use the contact information at the <a data-scroll href='#footer'>bottom of the page</a> to reach us.\"\n\t\t\tfeedbackContainer[0].appendChild(feedback)\n\t\t} else {\n\t\t\tif (navigator.onLine === false) {\n\t\t\t\tfeedback.className = 'feedback_warning'\n\t\t\t\tfeedback.innerHTML =\n\t\t\t\t\t\"Sorry for the inconvenience, but you are currently offline. You can't send a message while offline. You can wait until you are back online or use the contact information at the <a data-scroll href='#footer'>bottom of the page</a> to reach us.\"\n\t\t\t\tfeedbackContainer[0].appendChild(feedback)\n\t\t\t}\n\n\t\t\tAJAX.addEventListener('load', (e) => {\n\t\t\t\tif (e.target.status === 200) {\n\t\t\t\t\t// if the message was sent\n\t\t\t\t\tfeedback.className = 'feedback_success'\n\t\t\t\t\tfeedback.innerHTML = 'Your message was sent!'\n\t\t\t\t\tfeedbackContainer[0].appendChild(feedback)\n\n\t\t\t\t\tga('send', {\n\t\t\t\t\t\t// since GA is loaded in the head, assume its presence\n\t\t\t\t\t\thitType: 'event',\n\t\t\t\t\t\teventCategory: 'Form',\n\t\t\t\t\t\teventAction: 'send',\n\t\t\t\t\t\teventLabel: 'Contact Form'\n\t\t\t\t\t})\n\n\t\t\t\t\tdocument.querySelector('.inspection_form').reset() // empty the form on success\n\t\t\t\t} else {\n\t\t\t\t\t// something nonspecific has gone wrong\n\t\t\t\t\tfeedback.className = 'feedback_warning'\n\t\t\t\t\tfeedback.innerHTML =\n\t\t\t\t\t\t\"Sorry for the inconvenience, but your message may have not sent. You can try sending it again or use the contact information at the <a data-scroll href='#footer'>bottom of the page</a> to reach us.\"\n\t\t\t\t\tfeedbackContainer[0].appendChild(feedback)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tAJAX.open('POST', URL, true)\n\t\t\tAJAX.send(payload)\n\t\t}\n\t}\n\n\tfunction formConnectionManager() {\n\t\tif (navigator.onLine === false) {\n\t\t\tconst feedback = document.createElement('p')\n\n\t\t\tbutton.setAttribute('disabled', 'true')\n\t\t\tbutton.className = 'button form_submit disabled'\n\n\t\t\tfeedback.className = 'feedback_warning'\n\t\t\tfeedback.innerHTML =\n\t\t\t\t\"Sorry for the inconvenience, but you are currently offline. You can't send a message while offline. You can wait until you are back online or use the contact information at the <a data-scroll href='#footer'>bottom of the page</a> to reach us.\"\n\t\t\treturn feedbackContainer[0].appendChild(feedback)\n\t\t}\n\t\twhile (feedbackContainer[0].hasChildNodes()) {\n\t\t\tfeedbackContainer[0].removeChild(feedbackContainer[0].firstChild)\n\t\t}\n\n\t\tbutton.removeAttribute('disabled')\n\t\tbutton.className = 'button form_submit'\n\t\treturn button.className\n\t}\n\n\t/* event listeners & function calls */\n\tif (logoNav.length) {\n\t\tlogoNav[0].addEventListener('click', () => {\n\t\t\twindow.location = 'https://sewercam.net/'\n\t\t})\n\t}\n\n\tif (inputs.length) {\n\t\t// the only page with a form is 'your-sewer-scope.html'\n\t\tfor (let i = 0; i < inputs.length; i += 1) {\n\t\t\tinputs[i].addEventListener('input', (e) => {\n\t\t\t\tinputWidthController(e.target)\n\t\t\t})\n\t\t}\n\n\t\tinspectionForm[0].addEventListener('submit', (e) => {\n\t\t\te.preventDefault()\n\t\t\treturn sendReport()\n\t\t})\n\n\t\twindow.addEventListener('online', formConnectionManager)\n\n\t\twindow.addEventListener('offline', formConnectionManager)\n\t}\n}\n\nready(readyWrap)\n"],"file":"main-min.js"}