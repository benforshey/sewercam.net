{"version":3,"sources":["main.js"],"names":["ready","fn","document","readyState","addEventListener","attachEvent","readyWrap","button","getElementsByClassName","feedbackContainer","inputs","getElementsByTagName","inspectionForm","logoNav","security","formConnectionManager","navigator","onLine","feedback","createElement","setAttribute","className","innerHTML","appendChild","hasChildNodes","removeChild","firstChild","removeAttribute","serviceWorker","register","then","registration","console","log","scope","catch","e","length","window","location","i","target","chars","size","value","preventDefault","form","ga","hitType","eventCategory","eventAction","eventLabel","textContent","fetch","method","headers","Content-Type","body","JSON","stringify","address","querySelector","contact","name","time","response","ok","reset","error"],"mappings":"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","sourcesContent":["/* eslint-env browser */\n/* global ga */\n\nfunction ready(fn) {\n  if (document.readyState !== \"loading\") {\n    fn();\n  } else if (document.addEventListener) {\n    document.addEventListener(\"DOMContentLoaded\", fn);\n  } else {\n    document.attachEvent(\"onreadystatechange\", () => {\n      if (document.readyState !== \"loading\") {\n        fn();\n      }\n    });\n  }\n}\n\nfunction readyWrap() {\n  const button = document.getElementsByClassName(\"form_submit\")[0];\n  const feedbackContainer = document.getElementsByClassName(\"form_feedback\");\n  const inputs = document.getElementsByTagName(\"input\");\n  const inspectionForm = document.getElementsByClassName(\"inspection_form\");\n  const logoNav = document.getElementsByClassName(\"logoNav\");\n  const security = document.getElementsByClassName(\"form_security\");\n\n  // Register the ServiceWorker.\n  if (\"serviceWorker\" in navigator) {\n    // The service worker cannot access parent directories (apart from explicity setting scope), so keep it in the root directory.\n    navigator.serviceWorker\n      .register(\"serviceWorker.js\")\n      .then((registration) => {\n        console.log(\n          `ServiceWorker registration successful with scope: ${registration.scope}`\n        );\n      })\n      .catch((e) => {\n        console.log(`ServiceWorker registration failed: ${e}`);\n      });\n  }\n\n  function inputWidthController(target) {\n    const base = 25; // base size for all inputs\n    const chars = target.value.length;\n    const size = target.size;\n    if (chars > size) {\n      // if the input needs to expand\n      target.size = target.value.length; // expand it\n      return target.size;\n    } else if (chars < size && chars > base) {\n      // if the input contains less than its width and still has more than 15 characters\n      target.size = target.value.length; // shrink it\n      return target.size;\n    } // otherwise\n    target.size = base; // set to the base width\n    return target.size;\n  }\n\n  function sendRequest() {\n    const form = inspectionForm[0];\n    const feedback = document.createElement(\"p\");\n\n    if (security[0].value) {\n      feedback.className = \"feedback_error\";\n      feedback.innerHTML =\n        \"Sorry for the inconvenience, but you somehow triggered our anti-spam protection. Please use the contact information at the <a data-scroll href='#footer'>bottom of the page</a> to reach us.\";\n      feedbackContainer[0].appendChild(feedback);\n\n      return ga(\"send\", {\n        hitType: \"event\",\n        eventCategory: \"Form\",\n        eventAction: \"spam\",\n        eventLabel: \"Contact Form\",\n      });\n    } else {\n      if (navigator.onLine === false) {\n        feedback.className = \"feedback_warning\";\n        feedback.innerHTML =\n          \"Sorry for the inconvenience, but you are currently offline. You can't send a message while offline. You can wait until you are back online or use the contact information at the <a data-scroll href='#footer'>bottom of the page</a> to reach us.\";\n        feedbackContainer[0].appendChild(feedback);\n\n        return ga(\"send\", {\n          hitType: \"event\",\n          eventCategory: \"Form\",\n          eventAction: \"offline\",\n          eventLabel: \"Contact Form\",\n        });\n      }\n\n      button.textContent = \"Sending Messageâ€¦\";\n      button.setAttribute(\"disabled\", \"true\");\n\n      return fetch(\"/api/sms-send\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          address: form.querySelector('[name=\"address\"]').value,\n          contact: form.querySelector('[name=\"contact\"]').value,\n          name: form.querySelector('[name=\"name\"]').value,\n          time: form.querySelector('[name=\"time\"]').value,\n        }),\n      })\n        .then((response) => {\n          if (!response.ok) {\n            feedback.className = \"feedback_warning\";\n            feedback.innerHTML =\n              \"Sorry for the inconvenience, but your message may have not sent. You can try sending it again or use the contact information at the <a data-scroll href='#footer'>bottom of the page</a> to reach us.\";\n            feedbackContainer[0].appendChild(feedback);\n\n            return ga(\"send\", {\n              hitType: \"event\",\n              eventCategory: \"Form\",\n              eventAction: \"fail\",\n              eventLabel: \"Contact Form\",\n            });\n          }\n\n          feedback.className = \"feedback_success\";\n          feedback.innerHTML = \"Your message was sent!\";\n          feedbackContainer[0].appendChild(feedback);\n\n          document.querySelector(\".inspection_form\").reset();\n          button.textContent = \"Send\";\n          button.removeAttribute(\"disabled\");\n\n          return ga(\"send\", {\n            hitType: \"event\",\n            eventCategory: \"Form\",\n            eventAction: \"send\",\n            eventLabel: \"Contact Form\",\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n\n          return ga(\"send\", {\n            hitType: \"event\",\n            eventCategory: \"Form\",\n            eventAction: \"fail\",\n            eventLabel: \"Contact Form\",\n          });\n        });\n    }\n  }\n\n  function formConnectionManager() {\n    if (navigator.onLine === false) {\n      const feedback = document.createElement(\"p\");\n\n      button.setAttribute(\"disabled\", \"true\");\n      button.className = \"button form_submit disabled\";\n\n      feedback.className = \"feedback_warning\";\n      feedback.innerHTML =\n        \"Sorry for the inconvenience, but you are currently offline. You can't send a message while offline. You can wait until you are back online or use the contact information at the <a data-scroll href='#footer'>bottom of the page</a> to reach us.\";\n      return feedbackContainer[0].appendChild(feedback);\n    }\n    while (feedbackContainer[0].hasChildNodes()) {\n      feedbackContainer[0].removeChild(feedbackContainer[0].firstChild);\n    }\n\n    button.className = \"button form_submit\";\n    return button.removeAttribute(\"disabled\");\n  }\n\n  /* event listeners & function calls */\n  if (logoNav.length) {\n    logoNav[0].addEventListener(\"click\", () => {\n      window.location = \"https://sewercam.net/\";\n    });\n  }\n\n  if (inputs.length) {\n    // the only page with a form is 'your-sewer-scope.html'\n    for (let i = 0; i < inputs.length; i += 1) {\n      inputs[i].addEventListener(\"input\", (e) => {\n        inputWidthController(e.target);\n      });\n    }\n\n    inspectionForm[0].addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      return sendRequest();\n    });\n\n    window.addEventListener(\"online\", formConnectionManager);\n\n    window.addEventListener(\"offline\", formConnectionManager);\n  }\n}\n\nready(readyWrap);\n"],"file":"main-min.js"}